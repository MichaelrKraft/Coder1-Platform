name: Deploy Coder1 Platform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    concurrency:
      group: "pages"
      cancel-in-progress: false
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build React IDE
      run: |
        cd coder1-ide-source
        npm ci
        npm run build
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Prepare deployment files
      run: |
        # Create deployment directory
        mkdir -p _site
        
        # Copy main application files
        cp *.html _site/ 2>/dev/null || true
        cp -r static _site/ 2>/dev/null || true
        cp -r ide-build _site/ 2>/dev/null || true
        cp -r projects _site/ 2>/dev/null || true
        
        # Copy package.json for deployment info
        cp package.json _site/
        
        # Create a simple index.html if none exists
        if [ ! -f _site/index.html ]; then
          cat > _site/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Coder1 Platform</title>
            <style>
                body { 
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    margin: 0;
                    padding: 20px;
                    min-height: 100vh;
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    justify-content: center;
                    color: white;
                }
                .container {
                    text-align: center;
                    background: rgba(255,255,255,0.1);
                    backdrop-filter: blur(10px);
                    padding: 40px;
                    border-radius: 20px;
                    border: 1px solid rgba(255,255,255,0.2);
                }
                .links {
                    margin-top: 30px;
                    display: flex;
                    gap: 20px;
                    flex-wrap: wrap;
                    justify-content: center;
                }
                .link {
                    background: rgba(255,255,255,0.2);
                    padding: 12px 24px;
                    border-radius: 10px;
                    text-decoration: none;
                    color: white;
                    transition: all 0.3s ease;
                    border: 1px solid rgba(255,255,255,0.3);
                }
                .link:hover {
                    background: rgba(255,255,255,0.3);
                    transform: translateY(-2px);
                }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>üöÄ Coder1 Platform</h1>
                <p>Complete Autonomous Coding Platform with Smart PRD Generator and IDE</p>
                
                <div class="links">
                    <a href="smart-prd-generator.html" class="link">üìã Smart PRD Generator</a>
                    <a href="ide-build/index.html" class="link">üíª React IDE</a>
                    <a href="homepage.html" class="link">üè† Homepage</a>
                    <a href="test-ide-reactbits-enhanced.html" class="link">üß™ Test IDE</a>
                </div>
                
                <p style="margin-top: 20px; opacity: 0.8; font-size: 14px;">
                    Deployed automatically via GitHub Actions
                </p>
            </div>
        </body>
        </html>
        EOF
        fi
        
        # Create .nojekyll to prevent Jekyll processing
        touch _site/.nojekyll
        
        echo "Deployment files prepared:"
        ls -la _site/
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: '_site'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2